<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 问题，方法 | 潭风]]></title>
  <link href="http://senola.uni.me/blog/categories/wen-ti-,fang-fa/atom.xml" rel="self"/>
  <link href="http://senola.uni.me/"/>
  <updated>2014-07-17T13:57:02+08:00</updated>
  <id>http://senola.uni.me/</id>
  <author>
    <name><![CDATA[senola]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[解决 Permission denied(publicKey) 问题]]></title>
    <link href="http://senola.uni.me/blog/2014/07/13/git-error/"/>
    <updated>2014-07-13T09:03:47+08:00</updated>
    <id>http://senola.uni.me/blog/2014/07/13/git-error</id>
    <content type="html"><![CDATA[<p>好几个月没碰过<code>github Pages</code>了，一整就来事儿，花了一下午才搞定。现把问题和解决方法记录下来，以做参考。在用<code>git</code>向<code>github</code>服务器<code>push</code>代码的时候，出现了一下情况：</p>

<p><code>
 Pushing generated _deploy website Permission denied (publickey). fatal: Could not read from remote...
</code></p>

<p>折腾了一下，终于定位到问题所在了，原因是之前在本地生成<code>github</code>的<code>ssh key</code>失效了，导致<code>github</code>服务器验证提交请求失败，进而拒绝提交代码操作。好了，定位到问题所在就好办了，接下来就是初始化<code>SSH key</code>就行了。</p>

<p>右键&mdash;&ndash;>git bath，在控制台中输入：</p>

<p><code>
  ssh-keygen
</code></p>

<!--more-->


<p>一路Enter,如果已存在<code>id_rsa</code>文件的话，会提示你是否将其覆盖，键入<code>y</code>即可，如图:</p>

<p><img src="https://raw.githubusercontent.com/senola/pictures/master/git/git_bath01.jpg" alt="show info" /></p>

<p>找到<code>id_rsa</code>文件，这个文件目录随个人系统而定，我的是在<code>/c/Users/fosenola/.ssh/</code>下.找到一个叫<code>id_rsa.pub</code>的文件（特别注意，是<code>id_rsa.pub</code>),而后用文本编辑器（因为待会复制的时候不能复制到空格，否则会出现各种你不想见到的问题），如<code>notepad++、UltraEdit</code>等。接下来登入<a href="https://github.com/" target="_blank">github</a>网站，点击右上角<code>Acount Settings</code>&mdash;>SSH Keys &mdash;> Add SSH Key,如图：</p>

<p><img src="https://raw.githubusercontent.com/senola/pictures/master/git/github_sshkey_set.jpg" alt="show info" /></p>

<p><span style="color:red;font-weight: bold;">注意,上图中钥匙图标旁边的绿色小点表示该<code>SSH Key</code>状态为正在使用，灰色表示为使用或者已失效。可以用一下命令测试刚才加入的<code>SSH Key</code>是否成功：<span></p>

<p><code>
ssh -T git@github.com
</code></p>

<p>如果提示仍为“github,Permission denied(publicKey)”则表示<code>ssh key</code>设置失败，如果是“hello &hellip;，you&rsquo;ve successfully&hellip;”那么，恭喜，成功了！并且可以再刚才设置的<code>SSH Key</code>界面上看到灰色小点便成了绿色。</p>

<p><img src="https://raw.githubusercontent.com/senola/pictures/master/git/git_bath02.jpg" alt="show info" /></p>

<p>至此，就可以再试试<code>git push</code>命令了。当然以上只是自己在网上瞎找的方法，后来才知道自己太二了，这种东西官网才是王道。官网上不仅有<code>windows</code>，更有<code>MAC</code>、<code>Linux</code>下的解决方法。<a href="https://help.github.com/articles/generating-ssh-keys#platform-windows" target="_blank" style="color:green;font-weight:bold">猛戳这里</a></p>

<p>思考了一番，总结了几点：</p>

<pre><code>1. 遇到问题后不慌，先定位问题再找解决之法。   
2. 不轻易谷歌或者百度。   
3. 官方文档才是第一手资料。  
4. 所谓的大神就是啃多了第一手资料。  
</code></pre>
]]></content>
  </entry>
  
</feed>
