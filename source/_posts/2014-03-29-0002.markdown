---
layout: post
title: "在github上用Octopress搭建博客的方法"
date: 2014-02-10 22:00:56
comments: true
articleid: 20140210220056
keywords: oxtopress, 搭建博客
categories: github Octopress git
---
###一、Octopress及Github简介 ###
[Octopress](http://octopress.org) 是一款优秀的静态化博客系统，也是一个本地化的博客系统，Github为我们提供长期稳定的免费空间服务，但是Github空间不是一般意义上的PHP或者ASP空间。  

[Github](https://github.com/) 是一个代码托管空间，我们常用的一些PHP应用程序都无法在Github空间上运行。Octopress作为一个本地化的博客，官方将它简称为：“A blogging framework for hackers.”，也就是Octopress只适合那些经常玩Linux、写代码的朋友用的博客系统。  <!--more-->
`Octopress`博客最大的优势就是静态化，不依赖脚本程序，没有MysqL等数据库，因此它可以在一些性能差的服务器或者虚拟空间上运行，在同等条件下打开页面的速度自然也是非常快。  
`Octopress`支持自定义模板，可以markdown，文本文件写作、保存可以直接用dropbox等网盘来同步。另外它还可以让你有git版本控制功能。`octopress`还有个优点就是它的整个使用发布是个松耦合的结构，相信一些习惯了代码的朋友很喜欢。

###二、安装Octopress运行的必要软件 ###
> 1. 官方首页：http://octopress.org
> 1. 这里是[RubyInstaller](http://dl.bintray.com/oneclick/rubyinstaller/rubyinstaller-1.9.3-p484.exe?direct)下载地址。  
> 1. 这里是[DevKit](http://cloud.github.com/downloads/oneclick/rubyinstaller/DevKit-tdm-32-4.5.2-20111229-1559-sfx.exe)下载地址。  

安装好ruby后，win键+R，输入cmd进入控制台。可以输入`ruby -version`可查看ruby安装的本版信息。接着用CD的命令进入你存放DevKit的目录中，DevKit只需解压到一个文件夹:

![devkit.png](http://corey600.github.io/images/20130228/dkiu.jpg)

执行以下命令继续安装:

```
ruby dk.rb init       
ruby dk.rb install
```
之后会有如下输出：

![devkit-load.png](https://raw.githubusercontent.com/senola/pictures/master/octopress-tutorial/devkit-load.png)

虽然不知道这鸟玩意儿是作甚的，但是不执行的话，后面的`bundle install `是死活安装不了，会出现各种BUG，我试过的，作死！！！

接着`cd`到博客根目录，需要安装所需依赖：

```
  gem install bundler
  bundle install
```

但是，在天朝这个国度，这个是行不通的。没办法，得改变一个软件更细源，右键-->git bash,输入： 

```
    gem sources -a http://ruby.taobao.org/
	gem sources -r http://rubygems.org/
	gem sources -l
```

![ociu](http://corey600.github.io/images/20130228/ociu.jpg)

接着，打开Octopress安装目录下的D:\Blog\Gemfile，将第一行的source改成国内淘宝的http://ruby.taobao.org/ 

![ociu3](http://corey600.github.io/images/20130228/ociu3.jpg)

然后上边的依赖就可以正常安装了，TM 卡在这N久了~~


### 三、git 和 github 配置 ###
1.先注册一个github账号,创建github pages创建一个新的`Repository`。这里须要重视的是，若是想要博客的首页是`http://yourname.github.com`则Repository的`project name`就必须是`yourname.github.com`。


### 四、代码部署与调试###

生成静态代码命令：

```
     rake generate 
```  

该命令会在`public`目录下生成博客的静态文件。接着运行如下命令会在本地启动一个服务，可通过浏览器访问`http://localhost:5050`进行查看

```
      rake preview
```
访问端口可以在`octopress`博客代码根目录下（`source`分支）的`rakefile`文件中修改。

```
	public_dir      = "public"    # compiled site directory   
	source_dir      = "source"    # source file directory    
	blog_index_dir  = 'source'    # directory for your blog's index page (if you put your index in source/blog/index.html, set this to 'source/blog')    
	deploy_dir      = "_deploy"   # deploy directory (for Github pages deployment)   
	stash_dir       = "_stash"    # directory to stash posts for speedy generation   
	posts_dir       = "_posts"    # directory for blog files   
	themes_dir      = ".themes"   # directory for blog files   
	new_post_ext    = "markdown"  # default new post file extension when using the new_post task   
	new_page_ext    = "markdown"  # default new page file extension when using the new_page task   
	server_port     = "5050"      #修改本地启动访问端口为5050
```



